{"version":3,"sources":["webparts/subMenu/SubMenuWebPart.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AACtC,8DAAqD;AACrD,8DAIoC;AAEpC,+CAAiD;AACjD,gDAA2C;AAQ3C;IAA4C,kCAA2C;IAAvF;;IA0CA,CAAC;IAxCQ,+BAAM,GAAb;QACE,IAAM,OAAO,GAAuC,KAAK,CAAC,aAAa,CACrE,iBAAO,EACP;YACE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;YACxC,SAAS,EAAC,IAAI,CAAC,UAAU,CAAC,SAAS;SACpC,CACF,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,sBAAc,uCAAW;aAAzB;YACE,MAAM,CAAC,yBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAES,qDAA4B,GAAtC;QACE,MAAM,CAAC;YACL,KAAK,EAAE;gBACL;oBACE,MAAM,EAAE;wBACN,WAAW,EAAE,OAAO,CAAC,uBAAuB;qBAC7C;oBACD,MAAM,EAAE;wBACN;4BACE,SAAS,EAAE,OAAO,CAAC,cAAc;4BACjC,WAAW,EAAE;gCACX,uCAAqB,CAAC,aAAa,EAAE;oCACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB;iCACrC,CAAC;gCACF,uCAAqB,CAAC,WAAW,EAAE;oCACjC,KAAK,EAAE,OAAO,CAAC,mBAAmB;iCACnC,CAAC;6BACH;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CA1CA,AA0CC,CA1C2C,uCAAqB,GA0ChE","file":"webparts/subMenu/SubMenuWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport * as strings from 'SubMenuWebPartStrings';\r\nimport SubMenu from './components/SubMenu';\r\nimport { ISubMenuProps } from './components/ISubMenuProps';\r\n\r\nexport interface ISubMenuWebPartProps {\r\n  description: string;\r\n  linksdata:string;\r\n}\r\n\r\nexport default class SubMenuWebPart extends BaseClientSideWebPart<ISubMenuWebPartProps> {\r\n\r\n  public render(): void {\r\n    const element: React.ReactElement<ISubMenuProps > = React.createElement(\r\n      SubMenu,\r\n      {\r\n        description: this.properties.description,\r\n        linksdata:this.properties.linksdata\r\n      }\r\n    );\r\n\r\n    ReactDom.render(element, this.domElement);\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel\r\n                }),\r\n                PropertyPaneTextField('linksdata', {\r\n                  label: strings.linksdataFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}